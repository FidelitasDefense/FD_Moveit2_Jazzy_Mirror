name: docker

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main
      - pr-cache_dockers
    paths:
      - '.docker'

jobs:
  release:
    strategy:
      fail-fast: false
      matrix:
        ROS_DISTRO: [rolling, galactic]
    runs-on: ubuntu-latest
    outputs:
      trigger: ${{ steps.check.outputs.trigger }}
      no_cache: ${{ steps.check.outputs.no_cache }}
    permissions:
      packages: write
      contents: read
    env:
      IMAGE: ghcr.io/vatanaksoytezer/moveit2:${{ matrix.ROS_DISTRO }}-${{ github.job }}

    steps:
      - name: Check Package Updates"
        id: check
        if: github.event_name == 'push'
        run: |
          echo "::set-output name=trigger::true"
          echo "::set-output name=no_cache::false"
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Github Containter Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set build config
        id: config
        run: |
          no_cache=false
          if  [ "${{needs.check_ci_files.outputs.no_cache}}" == 'true' ] || \
              [ "${{needs.check_ci_image.outputs.no_cache}}" == 'true' ]
          then
            no_cache=true
          fi
          echo "::set-output name=no_cache::${no_cache}"
          trigger=false
          if  [ "${{needs.check_ci_files.outputs.trigger}}" == 'true' ] || \
              [ "${{needs.check_ci_image.outputs.trigger}}" == 'true' ]
          then
            trigger=true
          fi
          echo "::set-output name=trigger::${trigger}"
      - name: Build and Push
        if: steps.config.outputs.trigger == 'true'
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          file: .docker/${{ github.job }}/Dockerfile
          build-args: ROS_DISTRO=${{ matrix.ROS_DISTRO }}
          pull: true
          push: true
          no-cache: ${{ steps.config.outputs.no_cache }}
          cache-from: type=registry,ref=${{ env.IMAGE }}
          cache-to: type=inline
          target: builder
          tags: ${{ env.IMAGE }}

      # - name: Build image
      #   run: |
      #     echo Building docker ${{ env.IMAGE }}
      #     docker build . --build-arg ROS_DISTRO=${{ matrix.ROS_DISTRO }} --file .docker/${{ github.job }}/Dockerfile --tag ${{ env.IMAGE }}

      # - name: Log in to registry
      #   run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      # - name: Push image
      #   run: docker push ${{ env.IMAGE }}

  # ci:
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       ROS_DISTRO: [rolling, galactic]
  #   runs-on: ubuntu-latest
  #   permissions:
  #     packages: write
  #     contents: read
  #   env:
  #     IMAGE: ghcr.io/ros-planning/moveit2:${{ matrix.ROS_DISTRO }}-${{ github.job }}

  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: Build image
  #       run: |
  #         echo Building docker ${{ env.IMAGE }}
  #         docker build . --build-arg ROS_DISTRO=${{ matrix.ROS_DISTRO }} --file .docker/${{ github.job }}/Dockerfile --tag ${{ env.IMAGE }}

  #     - name: Log in to registry
  #       run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

  #     - name: Push image
  #       run: docker push ${{ env.IMAGE }}

  # ci-testing:
  #   needs: ci
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       ROS_DISTRO: [rolling, galactic]
  #   runs-on: ubuntu-latest
  #   permissions:
  #     packages: write
  #     contents: read
  #   env:
  #     IMAGE: ghcr.io/ros-planning/moveit2:${{ matrix.ROS_DISTRO }}-${{ github.job }}

  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: Build image
  #       run: |
  #         echo Building docker ${{ env.IMAGE }}
  #         docker build . --build-arg ROS_DISTRO=${{ matrix.ROS_DISTRO }} --file .docker/${{ github.job }}/Dockerfile --tag ${{ env.IMAGE }}

  #     - name: Log in to registry
  #       run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

  #     - name: Push image
  #       run: docker push ${{ env.IMAGE }}

  # source:
  #   needs: ci-testing
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       ROS_DISTRO: [rolling, galactic]
  #   runs-on: ubuntu-latest
  #   permissions:
  #     packages: write
  #     contents: read
  #   env:
  #     IMAGE: ghcr.io/ros-planning/moveit2:${{ matrix.ROS_DISTRO }}-${{ github.job }}

  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: Build image
  #       run: |
  #         echo Building docker ${{ env.IMAGE }}
  #         docker build . --build-arg ROS_DISTRO=${{ matrix.ROS_DISTRO }} --file .docker/${{ github.job }}/Dockerfile --tag ${{ env.IMAGE }}

  #     - name: Log in to registry
  #       run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

  #     - name: Push image
  #       run: docker push ${{ env.IMAGE }}
